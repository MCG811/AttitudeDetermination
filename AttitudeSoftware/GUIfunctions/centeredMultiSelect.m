% =====================================================================
% ---------------- FUNCTION TO CREATE CENTERED MULTI-SELECTION MENU ----------------
% =====================================================================
function selections = centeredMultiSelect(prompt, options)
    % Create a figure window
    fig = figure('Name', prompt, ...
                 'NumberTitle', 'off', ...
                 'Position', [500 300 350 450], ...  % Increased height for spacing
                 'Resize', 'off', ...
                 'WindowStyle', 'modal');

    movegui(fig, 'center');  % Center the figure on the screen

    % Display prompt
    uicontrol('Style', 'text', ...
              'String', prompt, ...
              'Position', [50 400 250 30], ...
              'FontSize', 10, ...
              'FontWeight', 'bold');

    % Create checkboxes dynamically
    numOptions = length(options);
    checkboxHandles = gobjects(numOptions, 1);
    startY = 370; % Adjusted Y position for better spacing

    for i = 1:numOptions
        checkboxHandles(i) = uicontrol('Style', 'checkbox', ...
                                       'String', options{i}, ...
                                       'Position', [50, startY - (i - 1) * 30, 200, 25], ...
                                       'FontSize', 10);
    end

    % OK button to confirm selection
    uicontrol('Style', 'pushbutton', ...
              'String', 'OK', ...
              'Position', [50 50 100 40], ...
              'FontSize', 10, ...
              'ForegroundColor', 'green', ...
              'BackgroundColor', 'white', ...
              'FontWeight', 'bold', ...
              'Callback', @okButtonCallback);

    % Styled "Close" button with red border and white text
    uicontrol('Style', 'pushbutton', ...
              'String', 'Close', ...
              'Position', [200 50 100 40], ...
              'FontSize', 10, ...
              'ForegroundColor', 'red', ...
              'BackgroundColor', 'white', ...
              'FontWeight', 'bold', ...
              'Callback', @closeButtonCallback);

    % Wait for user input
    selections = {};
    uiwait(fig);

    % OK button callback function
    function okButtonCallback(~, ~)
        selectedIndices = find(arrayfun(@(cb) cb.Value, checkboxHandles));
        selections = options(selectedIndices);
        uiresume(fig);
        close(fig);
    end

    % Close button callback function
    function closeButtonCallback(~, ~)
        disp('User closed the selection window. Stopping execution.');
        close(fig);
        error('Execution stopped by user.');
    end
end